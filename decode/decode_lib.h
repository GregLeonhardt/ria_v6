/*******************************  COPYRIGHT  ********************************/
/**
 *  Author? "Gregory N. Leonhardt"
 *  License? "CC BY-NC 2.0"
 *           "https://creativecommons.org/licenses/by-nc/2.0/"
 *
 ****************************************************************************/

#ifndef DECODE_LIB_H
#define DECODE_LIB_H

/******************************** JAVADOC ***********************************/
/**
 *  This file contains private definitions (etc.) that apply to internal
 *  library components of the 'decode' library.
 *
 *  @note
 *
 ****************************************************************************/

/****************************************************************************
 *  Compiler directives
 ****************************************************************************/

#ifdef ALLOC_DECODE
   #define DECODE_EXT
#else
   #define DECODE_EXT          extern
#endif

/****************************************************************************
 * System APIs
 ****************************************************************************/

                                //*******************************************
                                //*******************************************

/****************************************************************************
 * Application APIs
 ****************************************************************************/

                                //*******************************************
                                //*******************************************

/****************************************************************************
 * Library Private Definitions
 ****************************************************************************/

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------

/****************************************************************************
 * Library Private Enumerations
 ****************************************************************************/

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------

/****************************************************************************
 * Library Private Structures
 ****************************************************************************/

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------

/****************************************************************************
 * Library Private Storage Allocation
 ****************************************************************************/

//----------------------------------------------------------------------------
DECODE_EXT
int                             FooBar;
//----------------------------------------------------------------------------

/****************************************************************************
 * Library Private Prototypes
 ****************************************************************************/

//----------------------------------------------------------------------------
int
DECODE__is_preperations(
    char                    *   data_p
    );
//----------------------------------------------------------------------------
char  *
DECODE__fmt_ingredient(
    char                    *   in_ingredient_p,
    char                    *   ingredient_p,
    int                         mmf_length,
    int                         out_buf_size
    );
//----------------------------------------------------------------------------
char  *
DECODE__fmt_preparation(
    char                    *   in_preparation_p,
    char                    *   preparation_p,
    int                         mmf_length,
    int                         out_buf_size
    );
//----------------------------------------------------------------------------
void
DECODE__new_auip(
    struct   recipe_t       *   recipe_p,
    char                    *   amount_p,
    char                    *   unit_p,
    char                    *   ingredient_p,
    char                    *   preparation_p
    );
//----------------------------------------------------------------------------
char  *
DECODE__fmt_unit(
    char                    *   in_auip_p,
    char                    *   unit_p,
    int                         out_buf_size
    );
//----------------------------------------------------------------------------
char  *
DECODE__fmt_amount(
    char                    *   in_auip_p,
    char                    *   amount_p,
    int                         out_buf_size
    );
//----------------------------------------------------------------------------

/****************************************************************************/

#endif                      //    DECODE_LIB_H
