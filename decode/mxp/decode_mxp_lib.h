/*******************************  COPYRIGHT  ********************************/
/*
 *  Copyright (c) 2017 Gregory N. Leonhardt All rights reserved.
 *
 ****************************************************************************/

#ifndef DECODE_MXP_LIB_H
#define DECODE_MXP_LIB_H

/******************************** JAVADOC ***********************************/
/**
 *  This file contains private definitions (etc.) that apply to internal
 *  library components of the 'decode_mxp' library.
 *
 *  @note
 *
 ****************************************************************************/

/****************************************************************************
 *  Compiler directives
 ****************************************************************************/

#ifdef ALLOC_DECODE_MXP
   #define DECODE_MXP_EXT
#else
   #define DECODE_MXP_EXT         extern
#endif

/****************************************************************************
 * System APIs
 ****************************************************************************/

                                //*******************************************
                                //*******************************************

/****************************************************************************
 * Application APIs
 ****************************************************************************/

                                //*******************************************
                                //*******************************************

/****************************************************************************
 * Library Private Definitions
 ****************************************************************************/

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------

/****************************************************************************
 * Library Private Enumerations
 ****************************************************************************/

//----------------------------------------------------------------------------
enum    mxp_note_state_e
{
    MXP_NS_IDLE                 =    0,
    MXP_NS_PER_SERVING          =    1,
    MXP_NS_WINE                 =    2,
    MXP_NS_SERVING_IDEAS        =    3,
    MXP_NS_NOTES                =    4,
    MXP_NS_NUTR_ASSOC           =    5
};
//----------------------------------------------------------------------------

/****************************************************************************
 * Library Private Structures
 ****************************************************************************/

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------

/****************************************************************************
 * Library Private Storage Allocation
 ****************************************************************************/

//----------------------------------------------------------------------------
DECODE_MXP_EXT
enum    mxp_note_state_e            note_state;
//----------------------------------------------------------------------------

/****************************************************************************
 * Library Private Prototypes
 ****************************************************************************/

//----------------------------------------------------------------------------
int
DECODE_MXP__start(
    char                        *   data_p
    );
//----------------------------------------------------------------------------
int
DECODE_MXP__title(
    char                        *   data_p,
    struct   recipe_t           *   recipe_p
    );
//----------------------------------------------------------------------------
int
DECODE_MXP__recipe_by(
    char                        *   data_p,
    struct   recipe_t           *   recipe_p
    );
//----------------------------------------------------------------------------
int
DECODE_MXP__srv_size(
    char                        *   data_p,
    struct   recipe_t           *   recipe_p
    );
//----------------------------------------------------------------------------
int
DECODE_MXP__prep_time(
    char                        *   data_p,
    struct   recipe_t           *   recipe_p
    );
//----------------------------------------------------------------------------
int
DECODE_MXP__categories(
    char                        *   data_p,
    struct   recipe_t           *   recipe_p
    );
//----------------------------------------------------------------------------
int
DECODE_MXP__auip(
    char                        *   data_p,
    struct   recipe_t           *   recipe_p
    );
//----------------------------------------------------------------------------
int
DECODE_MXP__directions(
    char                        *   data_p,
    struct   recipe_t           *   recipe_p
    );
//----------------------------------------------------------------------------
int
DECODE_MXP__notes(
    char                        *   data_p,
    struct   recipe_t           *   recipe_p
    );
//----------------------------------------------------------------------------

/****************************************************************************/

#endif
